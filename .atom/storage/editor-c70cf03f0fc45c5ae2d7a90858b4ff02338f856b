{"mode":"editor","version":1,"windowDimensions":{"x":448,"y":22,"width":1024,"height":1107},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/rukmal/Documents/GitHub/GPAManager","buffers":[{"text":"/*\n * @author Rukmal Weerawarana\n *\n * @description Main routing file for the GPA Manager application.\n */\n\n\nvar pageTitle = 'GPA Manager : ';\nvar User = require('./../models/user');\n\nexports.index = function(req, res) {\n    res.render('index', {\n        title : pageTitle + 'Home'\n    });\n};\n\nexports.signup = function(req, res) {\n    res.render('signup', {\n        title: pageTitle + 'Sign up'\n    });\n};\n\nexports.signup_confirm = function(req, res) {\n    res.render('signup_pages/signup_confirm', {\n        title: pageTitle + 'Welcome!'\n    });\n};\n\nexports.signup_error = function(req, res) {\n    res.render('signup_pages/signup_error', {\n        title: pageTitle + 'Signup error'\n    });\n};\n\nexports.bad_login = function(req, res) {\n    res.render('badlogin', {\n        title: pageTitle + 'Bad login'\n    });\n};\n\nexports.success = function(req, res) {\n    res.render('success', {\n        title: pageTitle + 'Success'\n    });\n};\n\n\nexports.new_user = function(req, res) {\n    var user = new User({\n        firstName: req.body.user_first,\n        lastName: req.body.user_last,\n        email: req.body.user_email,\n        userName: req.body.user_uname,\n        password: req.body.user_password\n    });\n\n    user.save(function(err) {\n        if (err) {\n            res.redirect('/signup/error');\n        } else {\n            res.redirect('/signup/confirm');\n        }\n    });\n};\n\nexports.check_login = function(req, res) {\n    User.find({'userName': req.body.login_uname}, function(err, user) {\n        if (err) {\n            console.log(err);\n        } else {\n            if (user[0] == null) {\n                res.redirect('/badlogin')\n            } else {\n                user[0].comparePasswords(req.body.login_password);\n            }\n        }\n    });\n\n}\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":30},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/rukmal/Documents/GitHub/GPAManager/routes/main.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"7f31aeb48358b41b9726de7002689c1393437c4a","deserializer":"TextBuffer"},{"text":"/*\n * @author Rukmal Weerawarana\n *\n * @description Mongoose configuration for application.\n */\n\n'use strict'\n\nvar mongoose = require('mongoose');\nvar bcrypt = require('bcrypt');\nvar SALT_WORK_FACTOR = 10;\n\nvar userSchema = new mongoose.Schema({\n    firstName: {\n        type: String,\n        required: true\n    },\n    lastName: {\n        type: String,\n        required: true\n    },\n    email: {\n        type: String,\n        required: true,\n        unique: true\n    },\n    userName: {\n        type: String,\n        required: true,\n        unique: true\n    },\n    password: {\n        type: String,\n        required: true\n    }\n});\n\nuserSchema.pre('save', function(next) {\n    var user = this;\n\n    // only hash the password if it has been modified (or is new)\n    if (!user.isModified('password')) return next();\n\n    // generate a salt\n    bcrypt.genSalt(SALT_WORK_FACTOR, function(err, salt) {\n        if (err) return next(err);\n\n        // hash the password using our new salt\n        bcrypt.hash(user.password, salt, function(err, hash) {\n            if (err) return next(err);\n\n            // override the cleartext password with the hashed one\n            user.password = hash;\n            next();\n        });\n    });\n});\n\nuserSchema.methods.comparePasswords = function(candidatePassword) {\n    bcrypt.compare(candidatePassword, this.password, function(err, result) {\n        if (err) {\n            console.log(err);\n        } else {\n            console.log(result);\n            console.log('middle');\n            return true;\n            // FIX THIS\n            // Try a double return\n        }\n    });\n};\n\nmodule.exports = mongoose.model('User', userSchema);\n","markers":{"markers":{"2":{"id":2,"range":[[18,21],[18,21]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":38,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/rukmal/Documents/GitHub/GPAManager/models/user.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"b22eb0914f59ffb29aff98f98588a540e8b047b5","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"children":[{"items":[{"id":30,"softTabs":true,"scrollTop":0,"scrollLeft":0,"displayBuffer":{"id":31,"softWrap":true,"editorWidthInChars":54,"tokenizedBuffer":{"bufferPath":"/Users/rukmal/Documents/GitHub/GPAManager/routes/main.js","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/rukmal/Documents/GitHub/GPAManager/routes/main.js","focused":false,"active":false,"deserializer":"Pane"},{"items":[{"id":38,"softTabs":true,"scrollTop":0,"scrollLeft":0,"displayBuffer":{"id":37,"softWrap":true,"editorWidthInChars":54,"tokenizedBuffer":{"bufferPath":"/Users/rukmal/Documents/GitHub/GPAManager/models/user.js","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/rukmal/Documents/GitHub/GPAManager/models/user.js","focused":true,"active":true,"deserializer":"Pane"}],"orientation":"horizontal","deserializer":"PaneAxis"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/rukmal/Documents/GitHub/GPAManager/routes/main.js":1396491239741,"/Users/rukmal/Documents/GitHub/GPAManager/models/user.js":1396491238593},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":2837199},"tree-view":{"directoryExpansionStates":{"models":{},"public":{},"routes":{},"views":{}},"selectedPath":"/Users/rukmal/Documents/GitHub/GPAManager/models/user.js","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}