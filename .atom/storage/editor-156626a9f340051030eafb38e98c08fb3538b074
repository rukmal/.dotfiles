{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":0,"width":1920,"height":1200},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/rukmal/Downloads/ICC_v1.1","buffers":[{"text":"#!/usr/bin/perl -w\n\n#######################################################################################\n# Copyright Â© 2013 Mullins Lab, University of Washington\n# SOFTWARE COPYRIGHT NOTICE \n# This program and its documentation are the copyright of the Mullins Lab, University\n# of Washington. All rights are reserved.\n# \n# This program is free software. It is supplied without any warranty. You can \n# redistribute it and/or modify it. Mullins Lab is not responsible for its use, \n# misuse, or functionality.\n#\n# This program was developed by Wenjie Deng <dengw@uw.edu>\n#######################################################################################\n\nuse strict;\nuse lib \"/home/wdeng/ICC_v1.1/Scripts/lib\";\nuse seqAlign;\nuse Getopt::Long;\nuse File::Path;\n\nmy %option = (\n\t'if' => '',\n\t'of' => '',\n\t'cf' => 0.05,\n\t'mt' => 10,\n\t'mm' => -10,\n\t'gp' => -10,\n);\n\nmy $usage = \"\\nusage: perl CC.pl [-option value]\n\noptions:  \n-if\t\tinput sequence fasta file\n-of\t\toutput corrected sequence fasta file\n-cf\t\tcarry forward cutoff (default: $option{'cf'}, carry forward whose frequency is fewer than cutoff will be corrected)\n-mt\t\tmatch score (default: $option{'mt'})\n-mm\t\tmismatch score (default:  $option{'mm'})\n-gp\t\tgap penalty (default: $option{'gp'})\n\t\t\n\";\n\nGetOptions (\\%option, 'if=s', 'of=s', 'cf=f', 'mt=f', 'mm=f', 'gp=f');\n\nmy $inFile = $option{'if'} or die $usage;\nmy $outFile  = $option{'of'} or die $usage;\nmy $cfCut = $option{'cf'};\nmy $match = $option{'mt'};\nmy $misMatch = $option{'mm'};\nmy $gapPenalty = $option{'gp'};\n\nmy @flowNas = ('T', 'A', 'C', 'G');\nmy %flowNaHash = (\n\t'T' => 0,\n\t'A' => 1,\n\t'C' => 2,\n\t'G' => 3,\n);\nmy $name = '';\nmy (@names, %nameSeq, %picked);\nmy $readCount = 0;\nopen IN, $inFile or die \"couldn't open $inFile: $!\\n\";\nwhile (my $line = <IN>) {\n\tchomp $line;\n\tnext if $line =~ /^\\s*$/;\n\tif ($line =~ /^>(\\S+)/) {\n\t\t$name = $1;\n\t\tpush @names, $name;\n\t\tif ($name =~ /(\\d+)$/) {\n\t\t\t$readCount += $1;\n\t\t}\n\t}else {\n\t\t#$line =~ s/\\-//g;\n\t\t$nameSeq{$name} .= uc $line;\n\t}\n}\nclose IN;\n\nmy $idx = my $count = 0;\nmy $outputDir = \"./CC_otus\";\nif (-e $outputDir) {\n\trmtree($outputDir);\n}\nmkdir $outputDir;\nopen OUTPUT,\">$outFile\" or die \"couldn't open $outFile: $!\\n\";\nwhile (@names) {\n\tmy $central_name = shift @names;\n\tunless ($picked{$central_name}) {\t# central_name hasn't been picked by previous clustering\n\t\t$idx++;\n\t\t$count++;\n\t\tmy @cluster_names = ();\n\t\tmy $central_seq = $nameSeq{$central_name};\n\t\tprint OUTPUT \">$central_name\\n$central_seq\\n\";\n\t\t#$central_seq =~ s/\\-//g;\n\t\t\n\t\tpush @cluster_names, $central_name;\t\t\n\t\tmy $duplicates = 1;\n\t\tif ($central_name =~ /_(\\d+)$/) {\n\t\t\t$duplicates = $1;\n\t\t}\n\t\tmy $readFreq = $duplicates / $readCount;\n\t\tif ($readFreq >= 0.01) {\t# frequency is above 1%\n\t\t\tforeach my $rest_name (@names) {\n\t\t\t\tunless ($picked{$rest_name}) {\t# rest name hasn't been picked by previous clustering\n\t\t\t\t\tmy $rest_dup = 1;\n\t\t\t\t\tif ($rest_name =~ /_(\\d+)$/) {\n\t\t\t\t\t\t$rest_dup = $1;\n\t\t\t\t\t}\n\t\t\t\t\tmy $restFreq = $rest_dup / $readCount;\n\t\t\t\t\tmy $restPercent = $restFreq / ($readFreq + $restFreq);\n\t\t\t\t\tif ($restPercent < $cfCut) {\t# carry forward error frequency is as largist as 5% of total frequency in the cluster\n\t\t\t\t\t\tmy $rest_seq = $nameSeq{$rest_name};\t\t\t\t\t\n\t\t\t\t\t\t#$rest_seq =~ s/\\-//g;\n\t\t\t\t\t\t\n\t\t\t\t\t\tmy $etStrs = seqAlign::PairwiseAlign ($central_seq, $rest_seq, $match, $misMatch, $gapPenalty);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (@$etStrs) {\n\t\t\t\t\t\t\tforeach my $etStr (@$etStrs) {\n\t\t\t\t\t\t\t\tunless ($etStr =~ /DD+/) {\n\t\t\t\t\t\t\t\t\tif ($etStr =~ /D/ && $etStr =~ /I/) {\n\t\t\t\t\t\t\t\t\t\t#print \"$etStr\\n\";\n\t\t\t\t\t\t\t\t\t\tmy @alignCentralNas = my @alignRestNas = ();\n\t\t\t\t\t\t\t\t\t\tmy $d_char = my $i_char = '';\n\t\t\t\t\t\t\t\t\t\tmy $alignLen = length $etStr;\n\t\t\t\t\t\t\t\t\t\tmy @centralNas = split //, $central_seq;\n\t\t\t\t\t\t\t\t\t\tmy @restNas = split //, $rest_seq;\n\t\t\t\t\t\t\t\t\t\tmy @ets = split //, $etStr;\n\t\t\t\t\t\t\t\t\t\tmy $indelIdx = 0;\n\t\t\t\t\t\t\t\t\t\tmy $insStretch = my $delStretch = my $indels = 0;\n\t\t\t\t\t\t\t\t\t\tmy (%alignIndelIdx, %ins, %del, %indelAlignIdx);\n\t\t\t\t\t\t\t\t\t\tfor (my $i = 0; $i < $alignLen; $i++) {\n\t\t\t\t\t\t\t\t\t\t\tif ($ets[$i] eq 'I') {\n\t\t\t\t\t\t\t\t\t\t\t\t++$indelIdx;\n\t\t\t\t\t\t\t\t\t\t\t\t$i_char = shift @restNas;\n\t\t\t\t\t\t\t\t\t\t\t\t$ins{$indelIdx} = $i_char;\n\t\t\t\t\t\t\t\t\t\t\t\t$alignIndelIdx{$i} = $indelIdx;\n\t\t\t\t\t\t\t\t\t\t\t\t$indelAlignIdx{$indelIdx} = $i;\n\t\t\t\t\t\t\t\t\t\t\t\tpush @alignCentralNas, '-';\n\t\t\t\t\t\t\t\t\t\t\t\tpush @alignRestNas, $i_char;\n\t\t\t\t\t\t\t\t\t\t\t\tif (!$insStretch) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$insStretch = 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t$indels++;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}elsif ($ets[$i] eq 'D') {\n\t\t\t\t\t\t\t\t\t\t\t\t++$indelIdx;\n\t\t\t\t\t\t\t\t\t\t\t\t$d_char = shift @centralNas;\n\t\t\t\t\t\t\t\t\t\t\t\t$del{$indelIdx} = $d_char;\n\t\t\t\t\t\t\t\t\t\t\t\t$alignIndelIdx{$i} = $indelIdx;\n\t\t\t\t\t\t\t\t\t\t\t\t$indelAlignIdx{$indelIdx} = $i;\n\t\t\t\t\t\t\t\t\t\t\t\tpush @alignCentralNas, $d_char;\n\t\t\t\t\t\t\t\t\t\t\t\tpush @alignRestNas, '-';\n\t\t\t\t\t\t\t\t\t\t\t\tif (!$delStretch) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$delStretch = 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t$indels++;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\t\t\t\t\t\tpush @alignCentralNas, shift @centralNas;\n\t\t\t\t\t\t\t\t\t\t\t\tpush @alignRestNas, shift @restNas;\n\t\t\t\t\t\t\t\t\t\t\t\t$insStretch = $delStretch = 0;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tmy $flag = 0;\n\t\t\t\t\t\t\t\t\t\tfor (my $i = 0; $i < $alignLen; $i++) {\n\t\t\t\t\t\t\t\t\t\t\tif ($alignRestNas[$i] eq '-') {\t# single deletion\n\t\t\t\t\t\t\t\t\t\t\t\tmy $indelIdx = $alignIndelIdx{$i};\n\t\t\t\t\t\t\t\t\t\t\t\tmy $d_char = $del{$indelIdx};\n\t\t\t\t\t\t\t\t\t\t\t\tif ($alignCentralNas[$i+1] && $alignCentralNas[$i+2] && $alignCentralNas[$i] eq $alignCentralNas[$i+1] && $alignCentralNas[$i] eq $alignCentralNas[$i+2]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ($ins{$indelIdx+1}) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmy $betweenNas = my $pattern = '';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (my $j = $i+1; $j < $indelAlignIdx{$indelIdx+1}; $j++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$betweenNas .= $alignRestNas[$j];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (my $k = $flowNaHash{$d_char}; $k <= $flowNaHash{$d_char}+4; $k++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmy $m = $k % 4;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$pattern .= $flowNas[$m] . '*';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($betweenNas =~ /^$pattern$/ && $ins{$indelIdx+1} eq $d_char) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$flag = 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlast;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ($ins{$indelIdx-1}) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmy $betweenNas = my $pattern = '';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (my $j = $indelAlignIdx{$indelIdx-1}+1; $j < $i; $j++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$betweenNas .= $alignRestNas[$j];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (my $k = $flowNaHash{$d_char}; $k <= $flowNaHash{$d_char}+4; $k++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmy $m = $k % 4;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$pattern .= $flowNas[$m] . '*';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($betweenNas =~ /^$pattern$/ && $ins{$indelIdx-1} eq $d_char) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$flag = 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlast;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}elsif ($i > 1 && $alignCentralNas[$i-1] && $alignCentralNas[$i-2] && $alignCentralNas[$i] eq $alignCentralNas[$i-1] && $alignCentralNas[$i] eq $alignCentralNas[$i-2]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ($ins{$indelIdx+1}) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmy $betweenNas = my $pattern = '';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (my $j = $i+1; $j < $indelAlignIdx{$indelIdx+1}; $j++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$betweenNas .= $alignRestNas[$j];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (my $k = $flowNaHash{$d_char}; $k <= $flowNaHash{$d_char}+4; $k++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmy $m = $k % 4;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$pattern .= $flowNas[$m] . '*';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($betweenNas =~ /^$pattern$/ && $ins{$indelIdx+1} eq $d_char) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$flag = 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlast;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ($ins{$indelIdx-1}) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmy $betweenNas = my $pattern = '';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (my $j = $indelAlignIdx{$indelIdx-1}+1; $j < $i; $j++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$betweenNas .= $alignRestNas[$j];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (my $k = $flowNaHash{$d_char}; $k <= $flowNaHash{$d_char}+4; $k++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmy $m = $k % 4;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$pattern .= $flowNas[$m] . '*';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($betweenNas =~ /^$pattern$/ && $ins{$indelIdx-1} eq $d_char) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$flag = 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlast;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif ($flag) {\n\t\t\t\t\t\t\t\t\t\t\t$picked{$rest_name} = 1;\n\t\t\t\t\t\t\t\t\t\t\tpush @cluster_names, $rest_name;\n\t\t\t\t\t\t\t\t\t\t\t$count++;\n\t\t\t\t\t\t\t\t\t\t\tprint OUTPUT \">$rest_name\\n$nameSeq{$central_name}\\n\";\n\t\t\t\t\t\t\t\t\t\t\tlast;\n\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\t\n\t\tmy $localOutFile = \"$outputDir/$idx.fas\";\n\t\topen OUT, \">$localOutFile\" or die \"couldn't open $localOutFile: $!\\n\";\n\t\tforeach my $name (@cluster_names) {\n\t\t\tprint OUT \">$name\\n$nameSeq{$name}\\n\";\n\t\t}\n\t\tclose OUT;\n\t}\t\n}\n\nclose OUTPUT;\nprint \"Done!\\n\";\n","markers":{"markers":{"2":{"id":2,"range":[[39,2],[39,2]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":30,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"},"3":{"id":3,"range":[[23,11],[23,11]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":38,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/rukmal/Downloads/ICC_v1.1/Scripts/CC.pl","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"90c66280b043d69aa9d79efcb1f3f72e36876462","deserializer":"TextBuffer"},{"text":"ICC Version History:\n\n* ICC_v1.0   July 29th, 2013\n  - Initial release.\n  \n* ICC_v1.1   Oct. 29th, 2013\n  - Fixes the bug that may cause incorrect clustering in IC step if consensus is not the \n    most frequent sequence in a cluster in HIC step.\n  - Fixes the bug that outputs warning messages in calculating nucleotide frequencies \n    if there is only one sequence after error correction.\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":32},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/rukmal/Downloads/ICC_v1.1/VersionHistory.txt","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"81d26ea630f65a74103e0b409c15e092e8e5b7a5","deserializer":"TextBuffer"},{"text":"#!/usr/bin/perl -w\n\n#######################################################################################\n# Copyright Â© 2013 Mullins Lab, University of Washington\n# SOFTWARE COPYRIGHT NOTICE \n# This program and its documentation are the copyright of the Mullins Lab, University\n# of Washington. All rights are reserved.\n# \n# This program is free software. It is supplied without any warranty. You can \n# redistribute it and/or modify it. Mullins Lab is not responsible for its use, \n# misuse, or functionality.\n#\n# This program was developed by Wenjie Deng <dengw@uw.edu>\n#######################################################################################\n\nuse strict;\nuse Cwd;\nuse Config;\nuse File::Copy;\n\nmy $scriptPath = getcwd();\nmy $os = $Config{osname};\n$scriptPath =~ s/\\/$//;\nmy $blastPath = $scriptPath;\n$blastPath =~ s/Scripts/Blast/;\nif ($os =~ /linux/i || $os =~ /unix/i) {\n\t$os = \"Linux\";\n}elsif ($os =~ /darwin/i) {\n\t$os = \"Mac\";\n}elsif ($os =~ /win/i) {\n\t$os = \"Windows\";\n}else {\n\tdie \"Couldn't detect your operating system. Please contact dengw\\\"@\\\"uw.edu.\\n\";\n}\n$blastPath .= \"/$os/bin\";\nmy $lib = $scriptPath.\"/lib\";\nopen PM, \">lib/paths.pm\" or die \"couldn't open paths.pm: $!\\n\";\nprint PM \"package paths;\\n\\nuse strict;\\n\\n\";\nprint PM \"our \\$scriptPath = \\\"$scriptPath\\\";\\n\";\nprint PM \"our \\$blastPath = \\\"$blastPath\\\";\\n\\n\";\nprint PM \"1;\\n\";\nclose PM;\n\nmy @pls = qw (runBLAST.pl runICC.pl alignRegion.pl HIC.pl IC.pl CC.pl);\nforeach my $pl (@pls) {\n\tmy $tmp = $pl;\n\t$tmp =~ s/\\.pl$/_tmp.pl/;\n\topen IN, $pl or die \"couldn't open $pl: $!\\n\";\n\topen OUT, \">$tmp\" or die \"couldn't open $tmp: $!\\n\";\n\twhile (my $line = <IN>) {\n\t\tchomp $line;\n\t\tif ($line =~ /^use lib/) {\n\t\t\tprint OUT \"use lib \\\"$scriptPath/lib\\\";\\n\";\n\t\t}else {\n\t\t\tprint OUT \"$line\\n\";\n\t\t}\n\t}\n\tclose IN;\n\tclose OUT;\n\tmove ($tmp, $pl);\n\tchmod 0755, $pl;\n}\n#print \"os: $os\\n\";\n#print \"scriptPath: $scriptPath\\n\";\n#print \"blastPath: $blastPath\\n\";\n\n","markers":{"markers":{"1":{"id":1,"range":[[36,31],[36,31]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":34,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/rukmal/Downloads/ICC_v1.1/Scripts/config.pl","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"dd7102eb0a934cde9b36c26e5fbf6085fffa732f","deserializer":"TextBuffer"},{"text":"ICC - Indel and carryforward correction\nContact: dengw@uw.edu\n\n========\nOverview\n========\n\nICC is a software pipeline to correct sequencing errors such as indel and CAFIE errors\nin Roche 454 pyrosequencing data, call single nucleotide variant and calculate \nhaplotype frequencies.\n\n===================\nSystem Requirements\n===================\n\nICC has been tested on systems running Linux, Mac OS X and MS Windows.\n\n============\nInstallation\n============\n\n1. Download ICC_vx.x.zip to your preferred directory.\n2. Unzip ICC_vx.x.zip.\n3. Run \"perl config.pl\" in directory ICC_vx.x/Scripts.\n\nNote: x.x is the version number. NCBI's BLAST+ packages (version 2.2.27+) for Linux, Mac and Windows have been \npre-installed in ICC package. config.pl will automatically detect your operating system \nand configure the paths to run BLAST and perl scripts. If you move installed ICC_vx.x \nto other place, you need to run config.pl again before you execute ICC package.\n\n=======================\nHow to run ICC package?\n=======================\n\nStarting with raw pyrosequencing reads fasta and quality files, ICC needs to run \nfollowing four sequential steps:\n\n1. Read quality filtering\n\nUsage: perl /whereICCInstalled/Scripts/readQualFilter.pl [-option value]\n\nRequired parameters:\n-is <file>            Input pyrosequencing reads fasta file\n-iq <file>            Input pyrosequencing reads quality file\n-os <file>            Output fasta file for reads passing quality filter\n-oq <file>            Output quality file for reads passing quality filter\n\nOther options:\n-l <int>              Read length cutoff value. Read will be discard if it's length is\n                      shorter than cutoff. [default: 100]\n-q <int>              Read quality cutoff value. Read will be discard if it's average\n                      quality is smaller than cutoff. [default: 25]\n-h                    Usage help\n\n2. Map filtered reads to reference by BLAST\n\nUsage: perl /whereICCInstalled/Scripts/runBLAST.pl [-option value]\n\nRequired parameters:\n-in <file>            Input quality filtered reads fasta file\n-ref <file>           Input reference sequence fasta file\n-out <file>           Output BLAST xml file\n\nOther options:\n-mt <int>             Match reward for BLAST algorithm. [default: 1]\n-mm <int>             Mis-match penalty for BLAST algorithm. [default: -1]\n-go <int>             Cost to open a gap for BLAST algorithm. [default: 1]  \n-ge <int>             Cost to extend a gap for BLAST algorithm. [default: 2] \n-h                    Usage help         \n\n3. Retrieve sequences in windows or individual regions\n\n3.1. Retrieve consecutive windows' sequences\n\nUsage: perl /whereICCInstalled/Scripts/retrieveWindows.pl [-option value]\n\nRequired parameters:\n-xml <file>           Input BLAST xml file from step 2\n-ref <file>           Input reference sequence fasta file\n\nOther options:\n-rs <int>             Start position in reference sequence to retrieve windows. \n                      [default: 1. i.e. beginning of the reference]\n-re <int>             End position in reference sequence to retrieve windows. \n                      [default: 0. i.e. end of the reference]\n-ws <int>             Window size. [default: 60]  \n-ss <int>             Window stride size. [default: 60]  \n-afc <int>            Alignment fraction Cutoff. Read will be considered to\n                      specifically align to reference if the fraction of alingment is \n                      greater than cutoff.  [default: 0.6]  \n-dlx                  Flag to delete xml file after running the script. [default: false] \n-h                    Usage help\n\nNote: a serial sub-directories will be created in working directory with the name of\n\"Region_<num1>-<num2>\". num1 is the start position of window in reference, num2 is \nthe end position of window in reference. Each subdirectory contains retrieved read \nsequences covering the window. \n\n3.2. Retrieve sequences in a specific region\n\nUsage: perl /whereICCInstalled/Scripts/retrieveRegion.pl [-option value]\n\nRequired parameters:\n-xml <file>           Input BLAST xml file from step 2\n-ref <file>           Input reference sequence fasta file\n-rs <int>             Start position in reference sequence to retrieve region. \n-re <int>             End position in reference sequence to retrieve region. \n\nOther options:\n-afc <float>          Alignment fraction Cutoff. Read will be considered to\n                      specifically align to reference if the fraction of alignment is \n                      greater than cutoff.  [default: 0.6]  \n-dlx                  Flag to delete xml file after running the script. [default: false]\n-h                    Usage help\n\nNote: a sub-directory will be created in working directory with the name of\n\"Region_<num1>-<num2>\". num1 is the start position of the region in reference,\nnum2 is the end position of the region in reference. Subdirectory contains \nretrieved read sequences covering the region.  \n\n4. Error correction, variant calling and profiling\n\nUsage: perl /whereICCInstalled/Scripts/runICC.pl [-option value] >logFile\n\nOptions:\n-od <file>            Output directory where ICC processing data and results will be \n                      stored. It will be created in the directory of \n                      yourWorkingDerectory/Region_<num1>-<num2>/F_R_combo/.\n                      [default: ICC_output]\n-cs <int>             Minimal cluster size as a cluster seed in three clustering steps\n                      (homopolymer indel, indel and carry-forward errors only). \n                      Increasing the value will dramatically speed up the clustering.\n                      [default: 2. i.e. clusters with only one read will not cluster\n                      other reads]\n-cf <float>           Carry-forward frequency cutoff. Carry-forward will be corrected\n                      if it's frequency is lower than cutoff [default: 0.05]\n-u <float>            Overall mismatch rate per site to approximate a Poisson \n                      distribution of error. [default: 0.00013]\n-mt <int>             Match reward in multiple and pairwise alignment algorithm \n                      [default: 10]\n-mm <int>             Mis-match penalty in multiple and pairwise alignment algorithm \n                      [default: -9]\n-gp <int>             Gap penalty in multiple and pairwise alignment algorithm \n                      [default: -15]\n-h                    Usage help\n\nNote: You have to run runICC.pl in your working directory in which all subdirectories \nof \"Region_<num1>-<num2>\" are. It will output multiple files after the program finishes. \nlogFile records the process of running the program. Other file names all begin with \n<NameOfYourWorkingDirectory>. _nt_freq.txt shows nucleotide frequencies at each position\nacross reference before variant calling using Poisson distribution model. _SNV_freq.txt\nshows single nucleotide frequency by Poisson distribution. _nt_hyplotypes.fas is \nnucleotide hyplotype fasta file. _nt_hyplo_freq.txt is the file giving the frequency \nof each nucleotide hyplotype. _aa_hyplotypes.fas is amino acid hyplotype fasta file. \n_aa_hyplo_freq.txt is the file listing the frequency of each amino acid hyplotype. \n\n=======\nExample\n=======\n\nThe package includes example dataset you can test in the directory of ICC_vx.x/Example.\n\n------------------------\nHow to run example data?\n------------------------\n\n1. Change working directory into ICC Example directory\n\nUsage: cd /whereICCInstalled/Example\n\n2. Example read quality filtering\n\nUsage: perl /whereICCInstalled/Scripts/readQualFilter.pl -is exampleReads.fas -iq exampleReads.qual -os exampleReadsFilter.fas -oq exampleReadsFilter.qual\n\n3. Map filtered reads to example reference by BLAST\n\nUsage: perl /whereICCInstalled/Scripts/runBLAST.pl -in exampleReadsFilter.fas -ref exampleReference.fas -out exampleReadsFilterRef.xml\n\n4. Retrieve consecutive windows' sequences\n\nUsage: perl /whereICCInstalled/Scripts/retrieveWindows.pl -xml exampleReadsFilterRef.xml -ref exampleReference.fas\n\n5. Error correction, variant calling and profiling\n\nUsage: perl /whereICCInstalled/Scripts/runICC.pl  >exampleReadFilterRef.log\n\nThe following result files will be created: Example_aa_hyplo_freq.txt, Example_aa_hyplotypes.fas, \nExample_nt_freq.txt, Example_nt_hyplo_freq.txt, Example_nt_hyplotypes.fas, Example_SNV_freq.txt.\n","markers":{"markers":{"1":{"id":1,"range":[[86,53],[86,53]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":36,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/rukmal/Downloads/ICC_v1.1/README.txt","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"6c4eb340c80e4dd294696701b801af11bfdda726","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"children":[{"items":[{"id":32,"softTabs":true,"scrollTop":0,"scrollLeft":0,"displayBuffer":{"id":33,"softWrap":true,"editorWidthInChars":118,"tokenizedBuffer":{"bufferPath":"/Users/rukmal/Downloads/ICC_v1.1/VersionHistory.txt","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":34,"softTabs":false,"scrollTop":0,"scrollLeft":0,"displayBuffer":{"id":35,"softWrap":true,"editorWidthInChars":118,"tokenizedBuffer":{"bufferPath":"/Users/rukmal/Downloads/ICC_v1.1/Scripts/config.pl","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":38,"softTabs":false,"scrollTop":0,"scrollLeft":0,"displayBuffer":{"id":39,"softWrap":true,"editorWidthInChars":117,"tokenizedBuffer":{"bufferPath":"/Users/rukmal/Downloads/ICC_v1.1/Scripts/CC.pl","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/rukmal/Downloads/ICC_v1.1/Scripts/config.pl","focused":false,"active":true,"deserializer":"Pane"},{"items":[{"id":30,"softTabs":false,"scrollTop":0,"scrollLeft":0,"displayBuffer":{"id":29,"softWrap":true,"editorWidthInChars":117,"tokenizedBuffer":{"bufferPath":"/Users/rukmal/Downloads/ICC_v1.1/Scripts/CC.pl","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":36,"softTabs":true,"scrollTop":115,"scrollLeft":0,"displayBuffer":{"id":37,"softWrap":true,"editorWidthInChars":117,"tokenizedBuffer":{"bufferPath":"/Users/rukmal/Downloads/ICC_v1.1/README.txt","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/rukmal/Downloads/ICC_v1.1/README.txt","focused":false,"active":false,"deserializer":"Pane"}],"orientation":"horizontal","deserializer":"PaneAxis"},"deserializer":"PaneContainer"},"fullScreen":true,"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/rukmal/Downloads/ICC_v1.1/Scripts/CC.pl":1396560243663,"/Users/rukmal/Downloads/ICC_v1.1/VersionHistory.txt":1396559930272,"/Users/rukmal/Downloads/ICC_v1.1/Scripts/config.pl":1396560324590,"/Users/rukmal/Downloads/ICC_v1.1/README.txt":1396560152688},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":27376056},"tree-view":{"directoryExpansionStates":{"Scripts":{}},"selectedPath":"/Users/rukmal/Downloads/ICC_v1.1/Scripts/config.pl","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}